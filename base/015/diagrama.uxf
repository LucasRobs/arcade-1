<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=14
fontfamily=Monospaced

//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>300</y>
      <w>260</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>*Fone*
bg=yellow
--
+ id: string
+ number: string
--
_+ validate(number): bool_
--
+ Fone(serial)
+ Fone(id, number)
+ toString(): string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>90</y>
      <w>340</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>*Contato*
bg=yellow
--
- name: string
- fones: Fone[]
--
+ addFone(id: string, number: string) : boolean
+ rmFone(index: int) : boolean
+ getName(): string
+ getFones(): Fone[]
--
+ Contato(name)
+ toString(): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>70</y>
      <w>440</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>*Agenda*
bg=yellow
--
- contatos: Contato[]
--
- findContato(name: string): int

+ addContato(name: string, fones: Fone[])
+ rmContato(name: string): bool
+ search(pattern: string): Contato[]
+ getContatos(): Contato[]
--
+ Agenda()
+ getContato(name: string): Contato  (java)
+ getContato(name: string): Contato* (c++)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>170</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>270</y>
      <w>30</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>500</x>
      <y>410</y>
      <w>380</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>bg=green
Java:
    Usar ArrayList para todos os []

C++
    Usar vector para todos os []</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>470</x>
      <y>280</y>
      <w>440</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=pink
O método findContato pode ser utilizado em
várias situações. Ele retorna a posição do 
contato procurado no vetor ou -1 se não existir.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>80</x>
      <y>450</y>
      <w>380</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>bg=pink
O método validate é static.

O construtor Fone(serial) decompõe um
texto no formato name:number para construir 
o fone.</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
